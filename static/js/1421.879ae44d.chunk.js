"use strict";(self.webpackChunkn2_depot=self.webpackChunkn2_depot||[]).push([[1421],{41421:(e,t,s)=>{s.r(t),s.d(t,{default:()=>le});var i=s(1413),r=s(27366),n=s(66978),a=s(49861),o=(s(93169),s(32718)),l=(s(84936),s(69912)),u=s(33565),c=s(44927),h=s(94172),p=s(68860),m=s(79803),d=s(77671),v=(s(59486),s(52639)),g=(s(59166),s(51508),s(86950)),_=s(92026),y=s(5163),w=s(46634),f=s(2170),b=s(15559),C=s(93655),L=s(50951),M=s(85577),S=s(9843),A=s(14813),Z=s(74229),G=s(52974),D=s(45900),j=s(84954),k=s(17877),O=s(34019),T=s(80151),x=s(34010),q=s(64674),R=s(41201),U=s(36257),H=s(848),Y=s(61459),z=s(16851),V=s(58009),W=s(73268),E=s(16072),N=s(29909),I=s(78952),P=s(80885);const J=1e5;let B=class extends D.m{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new C.Z({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new C.Z({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new C.Z({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new w.R,this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){(0,R.ME)("esri/core/t9n/Units").then((e=>{this.messages=e}));const e=this.view;this._draw=new S.Z({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this._snappingManagerResult=(0,x.u)(e),this.addHandles([(0,U.qe)((async()=>{this.messages=await(0,R.ME)("esri/core/t9n/Units")})),(0,h.YP)((()=>[this.unit,this.geodesicDistanceThreshold,this.messages]),(()=>{this._updateGraphics()}),h.nn),(0,h.YP)((()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor]),(()=>{if(!this._vertices.length)return;const e=this._vertices.map((e=>{let{coord:t}=e;return t}));for(const{handle:t}of this._vertices)t.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)})),(0,h.YP)((()=>this.snappingOptions.featureSources),(e=>{for(const t of e)t.layer!==this._measurementLayer&&t.layer!==this._manipulatorLayer||(t.enabled=!1)}),h.nn),this._snappingManagerResult]),(0,q.Ob)(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=(0,_.SC)(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=(0,_.SC)(this._measurementLayer),this._manipulatorLayer=(0,_.SC)(this._manipulatorLayer),this._snappingLayer=(0,_.SC)(this._snappingLayer),this._updatingHandles=(0,_.SC)(this._updatingHandles),this._resetVertices()}get _snappingManager(){return this._snappingManagerResult.snappingManager}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this._snappingManager.options}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_getSnappingContext(e){return new O.N({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new k.c(new j.XE("point",(0,A.Y6)(!1,!1,this.view.spatialReference)),L.JY.Local),visualizer:new M.r(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._snappingManager,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),t.on("draw-complete",(()=>this._stopSketch()))}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach((e=>{let{manipulator:t}=e;t.interactive=!0})),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!K(t)||(0,m.isLoaded)())){for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let s=this._vertices.length;s<e.length;s++){const[i,r]=e[s],n=new H.Z({x:i,y:r,spatialReference:t}),a=X(n,this.view,this._manipulatorLayer);this.manipulators.add(a);const o=k.c.fromGeometry(n,L.JY.Local);o.on("vertex-update",(e=>{const t=e.vertices.at(0);t&&(this._vertices[s].coord=[t.pos[0],t.pos[1]],this._updateGraphics())}));const l=(0,Z.Xd)(a,((e,t,s,i)=>{const r=this._getSnappingContext(i),n=this._snappingManager,a=this._updatingHandles,{snappingStep:l}=(0,T.W)({snappingContext:r,snappingManager:n,updatingHandles:a});t.next((0,Z.Cf)(this.view)).next((t=>{if("start"===t.action){const s=new H.Z(t.mapStart);e.graphic.geometry=s,o.trySetGeometry(s)}return t})).next(...l).next((0,Z.$Q)({operations:o})).next((()=>{e.graphic.geometry=o.data.geometry}))}));this._vertices.push({manipulator:a,coord:[i,r],handle:l})}if(this._vertices.length){const s=this._vertices.length-1,i=this._vertices[s],[r,n]=e[s];i.coord[0]===r&&i.coord[1]===n||(i.coord=[r,n],i.manipulator.graphic.geometry=new H.Z({x:r,y:n,spatialReference:t}));const a=this._drawActive?this._vertices[s].manipulator:null;this.manipulators.forEach((e=>{let{manipulator:t}=e;t.interactive=null==a||t!==a}))}this._updateGraphics()}}_updateGraphics(){var e;if(this._vertices.length<2)return void this._measurementLayer.removeAll();const t=function(e,t,s){if(2===e.length){const i=new N.Z({paths:[e],spatialReference:t});let r;if(t.isGeographic)if((0,b.Gb)(t))r=(0,b.j2)(i,J);else{const e=(0,m.project)(i,I.Z.WGS84),s=(0,b.j2)(e,J);r=(0,m.project)(s,t)}else if(t.isWebMercator)r=(0,f.geodesicDensify)(i,J,"meters");else if((0,f.planarLength)(i,"meters")>=Q(s)){const e=(0,m.project)(i,I.Z.WGS84),s=(0,b.j2)(e,J);r=(0,m.project)(s,t)}else r=i;return{measurement:null,fillGeometry:null,outlineGeometry:r}}e.push(e[0]);const i=new N.Z({paths:[e],spatialReference:t}),r=new P.Z({rings:[e],spatialReference:t});let n,a,o=null,l=null;if(t.isGeographic)if((0,b.Gb)(t)){if(o=(0,b.j2)(i,J),l=(0,b.j2)(r,J),l=(0,f.simplify)(l),!l)return null;n=(0,b.Jf)([i],"meters")[0],a=(0,b.p8)([l],"square-meters")[0]}else{const e=I.Z.WGS84,s=(0,m.project)(i,e),u=(0,m.project)(r,e);if(o=(0,b.j2)(s,J),l=(0,b.j2)(u,J),l=(0,f.simplify)(l),!l)return null;n=(0,b.Jf)([s],"meters")[0],a=(0,b.p8)([l],"square-meters")[0],o=(0,m.project)(o,t),l=(0,m.project)(l,t)}else if(t.isWebMercator){if(o=(0,f.geodesicDensify)(i,J,"meters"),l=(0,f.geodesicDensify)(r,J,"meters"),l=(0,f.simplify)(l),!l)return null;n=(0,f.geodesicLength)(i,"meters"),a=(0,f.geodesicArea)(l,"square-meters")}else{const e=(0,f.planarLength)(i,"meters");if(e>=Q(s)){const e=I.Z.WGS84,s=(0,m.project)(i,e),u=(0,m.project)(r,e);if(o=(0,b.j2)(s,J),l=(0,b.j2)(u,J),l=(0,f.simplify)(l),!l)return null;n=(0,b.Jf)([s],"meters")[0],a=(0,b.p8)([l],"square-meters")[0],o=(0,m.project)(o,t),l=(0,m.project)(l,t)}else{if(o=i,l=(0,f.simplify)(r),!l)return null;n=e,a=(0,f.planarArea)(l,"square-meters")}}return{measurement:{geometry:l,area:a,perimeter:n},fillGeometry:l,outlineGeometry:o}}(this._vertices.map((e=>{let{coord:t}=e;return t})),this.view.spatialReference,this.geodesicDistanceThreshold);if(!t)return;const{measurement:s,fillGeometry:i,outlineGeometry:r}=t;this._set("measurement",s);const n=s?function(e,t,s){if(!t||!e)return null;const i={area:null,perimeter:null},{area:r,perimeter:n}=t;switch(s){case"metric":i.area=(0,y.ld)(e,r,"square-meters");break;case"imperial":i.area=(0,y.yc)(e,r,"square-meters");break;default:{const t=(0,p.En)(r,"square-meters",s);i.area=(0,y.VG)(e,t,s);break}}const a=function(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}(s);if(a)switch(a){case"metric":i.perimeter=(0,y.Rd)(e,n,"meters");break;case"imperial":i.perimeter=(0,y.Ud)(e,n,"meters");break;default:{const t=(0,p.En)(n,"meters",a);i.perimeter=(0,y.VG)(e,t,a);break}}else i.perimeter="";return i}(this.messages,s,this.unit):null;if(this._set("measurementLabel",n),!i&&!r)return;let a,o,l;const{graphics:u}=this._measurementLayer,c=3===u.length,{effectiveTheme:h}=this.view;c?(a=u.at(0),o=u.at(1),l=u.at(2)):(a=new v.Z({symbol:new Y.Z({color:(0,g.G)(h.accentColor,.3),outline:null})}),o=new v.Z({symbol:new z.Z({color:h.accentColor,width:2})}),l=new v.Z({symbol:new V.Z({color:h.textColor,font:new W.Z({size:14,family:"sans-serif"}),haloColor:(0,g.G)((0,g.mj)(h.textColor,g.K6.Low),.5),haloSize:2})}),u.removeAll(),u.addMany([a,o,l])),a.geometry=i,o.geometry=r,l.geometry=null===i||void 0===i?void 0:i.centroid,l.symbol.text=null!==(e=null===n||void 0===n?void 0:n.area)&&void 0!==e?e:""}};function X(e,t,s){const r={style:"circle",color:(0,g.G)(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},n=new E.Z((0,i.Z)((0,i.Z)({},r),{},{size:8})),a=new E.Z((0,i.Z)((0,i.Z)({},r),{},{size:12})),o=new v.Z({geometry:e,symbol:n});return new G.L({view:t,layer:s,graphic:o,focusedSymbol:a})}function K(e){if(!e)return!1;const{isGeographic:t,isWebMercator:s,isWGS84:i}=e;return t&&!i&&!(0,b.Gb)(e)||!t&&!s}function Q(e){return null!==e&&void 0!==e?e:1/0}(0,r._)([(0,a.Cb)()],B.prototype,"_drawActive",void 0),(0,r._)([(0,a.Cb)({readOnly:!0})],B.prototype,"cursor",null),(0,r._)([(0,a.Cb)({value:!0})],B.prototype,"editable",null),(0,r._)([(0,a.Cb)({type:Number})],B.prototype,"geodesicDistanceThreshold",void 0),(0,r._)([(0,a.Cb)({readOnly:!0})],B.prototype,"measurement",void 0),(0,r._)([(0,a.Cb)({readOnly:!0})],B.prototype,"measurementLabel",void 0),(0,r._)([(0,a.Cb)()],B.prototype,"messages",void 0),(0,r._)([(0,a.Cb)()],B.prototype,"unit",void 0),(0,r._)([(0,a.Cb)()],B.prototype,"updating",null),(0,r._)([(0,a.Cb)({constructOnly:!0})],B.prototype,"view",void 0),B=(0,r._)([(0,l.j)("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],B);var $=s(32845);let F=class extends $.V{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([(0,h.YP)((()=>{var e;return null===(e=this.view)||void 0===e?void 0:e.spatialReference}),(()=>this.clear())),(0,h.YP)((()=>this.unit),(e=>{null!=this.tool&&(this.tool.unit=e)}),h.nn),(0,h.YP)((()=>this.geodesicDistanceThreshold),(e=>{null!=this.tool&&(this.tool.geodesicDistanceThreshold=e)}),h.nn)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){(0,c.Mr)(o.Z.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return null!=this.tool?this.tool.measurement:null}get measurementLabel(){return null!=this.tool?this.tool.measurementLabel:null}get state(){var e;return this.disabled||null==this.view||null==this.view.spatialReference?"disabled":null!==(e=this.tool)&&void 0!==e&&e.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return p.fN}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;null!=e&&(await(0,h.N1)((()=>e.ready)),K(e.spatialReference)&&await(0,m.load)()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new B({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:s}=this;return null!=e&&t.includes(e)?e:t.includes(s)?s:t.length>0?t[0]:s}_validateUnits(e){if(null==e)return[];const t=e.filter((e=>p.fN.includes(e)));return 0===t.length?p.fN.slice():t}};(0,r._)([(0,a.Cb)(d.Y)],F.prototype,"defaultUnit",void 0),(0,r._)([(0,a.Cb)()],F.prototype,"geodesicDistanceThreshold",null),(0,r._)([(0,a.Cb)({readOnly:!0})],F.prototype,"measurement",null),(0,r._)([(0,a.Cb)({readOnly:!0})],F.prototype,"measurementLabel",null),(0,r._)([(0,a.Cb)({readOnly:!0})],F.prototype,"state",null),(0,r._)([(0,a.Cb)({type:String})],F.prototype,"unit",null),(0,r._)([(0,a.Cb)({type:[String]})],F.prototype,"unitOptions",null),F=(0,r._)([(0,l.j)("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],F);const ee=F;var te=s(7021),se=s(82052),ie=(s(80975),s(80532)),re=s(67005);const ne="esri-area-measurement-2d",ae={base:ne,newMeasurementButton:"".concat(ne,"__clear-button")};let oe=class extends u.Z{constructor(e,t){super(e,t),this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new ee}get active(){return this.viewModel.active}get icon(){return"measure-area"}set icon(e){this._overrideIfSome("icon",e)}get label(){var e,t;return null!==(e=null===(t=this.messages)||void 0===t?void 0:t.widgetLabel)&&void 0!==e?e:""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,messagesUnits:s,unit:r,unitOptions:a,viewModel:o,visible:l}=this,{active:u,measurementLabel:c,state:h,supported:p}=o;return(0,re.u)("div",{"aria-label":e.widgetLabel,class:this.classes(ae.base,te.z.widget,te.z.panel),key:this,role:"region"},l?(0,re.u)(se.s,{active:u,measurementItems:[{key:"area",title:null===s||void 0===s?void 0:s.measures.area,value:null===c||void 0===c?void 0:c.area},{key:"perimeter",title:e.perimeter,value:null===c||void 0===c?void 0:c.perimeter}],messages:(0,i.Z)((0,i.Z)({},e),{},{notApplicable:t.notApplicable}),newMeasurementButtonClass:ae.newMeasurementButton,state:h,supported:p,unit:r,unitOptions:a,onNewMeasurementClick:()=>{(0,n.R8)(o.start())},onUnitChange:e=>{this.unit=e}}):null)}};(0,r._)([(0,a.Cb)({readOnly:!0})],oe.prototype,"active",null),(0,r._)([(0,a.Cb)()],oe.prototype,"icon",null),(0,r._)([(0,a.Cb)()],oe.prototype,"label",null),(0,r._)([(0,a.Cb)(),(0,ie.H)("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],oe.prototype,"messages",void 0),(0,r._)([(0,a.Cb)(),(0,ie.H)("esri/core/t9n/Units")],oe.prototype,"messagesUnits",void 0),(0,r._)([(0,a.Cb)(),(0,ie.H)("esri/t9n/common")],oe.prototype,"messagesCommon",void 0),(0,r._)([(0,a.Cb)()],oe.prototype,"uiStrings",void 0),(0,r._)([(0,a.Cb)()],oe.prototype,"unit",null),(0,r._)([(0,a.Cb)()],oe.prototype,"unitOptions",null),(0,r._)([(0,a.Cb)()],oe.prototype,"view",null),(0,r._)([(0,a.Cb)({type:ee})],oe.prototype,"viewModel",void 0),(0,r._)([(0,a.Cb)({type:Boolean})],oe.prototype,"visible",null),oe=(0,r._)([(0,l.j)("esri.widgets.AreaMeasurement2D")],oe);const le=oe}}]);
//# sourceMappingURL=1421.879ae44d.chunk.js.map